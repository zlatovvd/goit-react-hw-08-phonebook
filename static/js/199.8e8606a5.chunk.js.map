{"version":3,"file":"static/js/199.8e8606a5.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/Register/Register.module.css?12fc","pages/Register/Register.jsx","../node_modules/@chakra-ui/icons/dist/chunk-BRE73WBG.mjs","../node_modules/@chakra-ui/icons/dist/chunk-WQWU3AO7.mjs","../node_modules/@chakra-ui/toast/dist/chunk-7FYWZXXG.mjs"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"registerForm\":\"Register_registerForm__uD5pr\"};","import { fetchApi } from 'http/http';\nimport css from './Register.module.css';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authLoginThunk } from 'redux/auth/authThunk';\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  useToast,\n  Button,\n  InputGroup,\n  InputRightElement,\n  IconButton,\n} from '@chakra-ui/react';\nimport { ViewIcon, ViewOffIcon } from '@chakra-ui/icons';\n\nconst initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst Register = () => {\n  const [values, setValues] = useState(initialState);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isPassword, setIsPassword] = useState(true);\n  const dispatch = useDispatch();\n  const toast = useToast();\n\n  const handleChange = event => {\n    const { value, name } = event.target;\n    setValues(prev => ({ ...prev, [name]: value }));\n  };\n\n  const showPassword = () => {\n    setIsPassword(!isPassword);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      setIsLoading(true);\n      await fetchApi.post('/users/signup', values);\n      await dispatch(\n        authLoginThunk({ email: values.email, password: values.password })\n      ).unwrap();\n      setIsLoading(false);\n      toast({\n        title: `User ${values.name} registered`,\n        position: 'top-right',\n        isClosable: true,\n        status: 'success',\n      });\n    } catch (e) {\n      toast({\n        title: `Error ${e.message}`,\n        position: 'top-right',\n        isClosable: true,\n        status: 'error',\n      });\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.registerForm}>\n      <h1>Please Sign In</h1>\n\n      <FormControl mb={5} isRequired>\n        <FormLabel>Name</FormLabel>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          variant=\"outline\"\n          placeholder=\"Name\"\n          value={values.name}\n          onChange={handleChange}\n        />\n      </FormControl>\n\n      <FormControl mb={5} isRequired>\n        <FormLabel>Email</FormLabel>\n        <Input\n          type=\"email\"\n          name=\"email\"\n          variant=\"outline\"\n          placeholder=\"Email\"\n          value={values.email}\n          onChange={handleChange}\n        />\n      </FormControl>\n\n      <FormControl mb={5} isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup>\n          <Input\n            type={isPassword ? 'password' : 'text'}\n            name=\"password\"\n            placeholder=\"password\"\n            value={values.password}\n            onChange={handleChange}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <IconButton h=\"1.75rem\" size=\"sm\" onClick={showPassword}>\n              {isPassword ? <ViewOffIcon /> : <ViewIcon />}\n            </IconButton>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n\n      <Button colorScheme=\"teal\" isLoading={isLoading} type=\"submit\">\n        Sign in\n      </Button>\n    </form>\n  );\n};\n\nexport default Register;\n","// src/ViewOff.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar ViewOffIcon = createIcon({\n  displayName: \"ViewOffIcon\",\n  path: /* @__PURE__ */ jsxs(\"g\", { fill: \"currentColor\", children: [\n    /* @__PURE__ */ jsx(\"path\", { d: \"M23.2,10.549a20.954,20.954,0,0,0-4.3-3.6l4-3.995a1,1,0,1,0-1.414-1.414l-.018.018a.737.737,0,0,1-.173.291l-19.5,19.5c-.008.007-.018.009-.026.017a1,1,0,0,0,1.631,1.088l4.146-4.146a11.26,11.26,0,0,0,4.31.939h.3c4.256,0,8.489-2.984,11.051-5.8A2.171,2.171,0,0,0,23.2,10.549ZM16.313,13.27a4.581,4.581,0,0,1-3,3.028,4.3,4.3,0,0,1-3.1-.19.253.253,0,0,1-.068-.407l5.56-5.559a.252.252,0,0,1,.407.067A4.3,4.3,0,0,1,16.313,13.27Z\" }),\n    /* @__PURE__ */ jsx(\"path\", { d: \"M7.615,13.4a.244.244,0,0,0,.061-.24A4.315,4.315,0,0,1,7.5,12,4.5,4.5,0,0,1,12,7.5a4.276,4.276,0,0,1,1.16.173.244.244,0,0,0,.24-.062l1.941-1.942a.254.254,0,0,0-.1-.421A10.413,10.413,0,0,0,12,4.75C7.7,4.692,3.4,7.7.813,10.549a2.15,2.15,0,0,0-.007,2.9,21.209,21.209,0,0,0,3.438,3.03.256.256,0,0,0,.326-.029Z\" })\n  ] })\n});\n\nexport {\n  ViewOffIcon\n};\n","// src/View.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar ViewIcon = createIcon({\n  displayName: \"ViewIcon\",\n  path: /* @__PURE__ */ jsxs(\"g\", { fill: \"currentColor\", children: [\n    /* @__PURE__ */ jsx(\"path\", { d: \"M23.432,10.524C20.787,7.614,16.4,4.538,12,4.6,7.6,4.537,3.213,7.615.568,10.524a2.211,2.211,0,0,0,0,2.948C3.182,16.351,7.507,19.4,11.839,19.4h.308c4.347,0,8.671-3.049,11.288-5.929A2.21,2.21,0,0,0,23.432,10.524ZM7.4,12A4.6,4.6,0,1,1,12,16.6,4.6,4.6,0,0,1,7.4,12Z\" }),\n    /* @__PURE__ */ jsx(\"circle\", { cx: \"12\", cy: \"12\", r: \"2\" })\n  ] })\n});\n\nexport {\n  ViewIcon\n};\n","import {\n  useToastOptionContext\n} from \"./chunk-D3Z6CXO7.mjs\";\nimport {\n  createToastFn\n} from \"./chunk-PE6CKLNB.mjs\";\n\n// src/use-toast.tsx\nimport { useChakra } from \"@chakra-ui/system\";\nimport { useMemo } from \"react\";\nfunction useToast(options) {\n  const { theme } = useChakra();\n  const defaultOptions = useToastOptionContext();\n  return useMemo(\n    () => createToastFn(theme.direction, {\n      ...defaultOptions,\n      ...options\n    }),\n    [options, theme.direction, defaultOptions]\n  );\n}\nvar use_toast_default = useToast;\n\nexport {\n  useToast,\n  use_toast_default\n};\n"],"names":["initialState","name","email","password","useState","values","setValues","isLoading","setIsLoading","isPassword","setIsPassword","dispatch","useDispatch","toast","useToast","handleChange","event","target","value","prev","handleSubmit","preventDefault","fetchApi","authLoginThunk","unwrap","title","position","isClosable","status","message","onSubmit","className","css","mb","isRequired","I","type","variant","placeholder","onChange","width","h","size","onClick","colorScheme","ViewOffIcon","createIcon","displayName","path","jsxs","fill","children","jsx","d","ViewIcon","cx","cy","r","options","theme","useChakra","defaultOptions","useToastOptionContext","useMemo","createToastFn","direction"],"sourceRoot":""}